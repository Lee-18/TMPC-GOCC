clc,clear all
JSD_eff={load([fileparts(pwd) '\TL\Group1\TL_eff\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group2\TL_eff\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group3\TL_eff\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group4\TL_eff\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group5\TL_eff\ModelTesting\res.mat'])};
JSD_shift={load([fileparts(pwd) '\TL\Group1\TL_shift\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group2\TL_shift\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group3\TL_shift\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group4\TL_shift\ModelTesting\res.mat']);...
    load([fileparts(pwd) '\TL\Group5\TL_shift\ModelTesting\res.mat'])};

EE_eff=load([fileparts(pwd) '\TargetDataSizeDetermine\EE_tar_eff.mat']);
EE_shift=load([fileparts(pwd) '\TargetDataSizeDetermine\EE_tar_shift.mat']);
%
x=[EE_eff.EE(:);EE_shift.EE(:)];
y_deltaJSD=[JSD_eff{1,1}.JSD_tar_test(:);...
    JSD_eff{2,1}.JSD_tar_test(:);...
    JSD_eff{3,1}.JSD_tar_test(:);...
    JSD_eff{4,1}.JSD_tar_test(:);...
    JSD_eff{5,1}.JSD_tar_test(:);...
    JSD_shift{1,1}.JSD_tar_test(:);...
    JSD_shift{2,1}.JSD_tar_test(:);...
    JSD_shift{3,1}.JSD_tar_test(:);...
    JSD_shift{4,1}.JSD_tar_test(:);...
    JSD_eff{5,1}.JSD_tar_test(:)]-...
    [JSD_eff{1,1}.JSD_tarTL_test(:);...
    JSD_eff{2,1}.JSD_tarTL_test(:);...
    JSD_eff{3,1}.JSD_tarTL_test(:);...
    JSD_eff{4,1}.JSD_tarTL_test(:);...
    JSD_eff{5,1}.JSD_tarTL_test(:);...
    JSD_shift{1,1}.JSD_tarTL_test(:);...
    JSD_shift{2,1}.JSD_tarTL_test(:);...
    JSD_shift{3,1}.JSD_tarTL_test(:);...
    JSD_shift{4,1}.JSD_tarTL_test(:);...
    JSD_eff{5,1}.JSD_tarTL_test(:)];

%%
load('JSD_Data.mat')
%%
figure
plot(x, [y_JSD-y_deltaJSD], 'o','DisplayName', 'All data points')
xlabel('Eigen entropy [bit]')
ylabel(['JSD_TL'], 'Interpreter', 'latex')
ylim([0,0.7])
grid on
%%
figure
plot(x, y_deltaJSD, 'o','DisplayName', 'All data points')
xlabel('Eigen entropy [bit]')
ylabel(['$\triangle$' 'JSD'], 'Interpreter', 'latex')
grid on
ylim([0,0.7])